//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Xml;
using Dpws.Client;
using Dpws.Client.Discovery;
using Dpws.Client.Eventing;
using Dpws.Client.Transport;
using Ws.Services;
using Ws.Services.Utilities;
using Ws.Services.WsaAddressing;
using Ws.Services.Xml;

namespace localhost.WineMonitorAlert
{
    
    
    public class IWineMonitorAlertClientProxy : DpwsClient
    {
        
        public string ServiceEndpoint = null;
        
        private DpwsHttpClient m_httpClient = new DpwsHttpClient();
        
        public IWineMonitorAlertClientProxy()
        {
            Init();
        }
        
        public IWineMonitorAlertClientProxy(int port) : 
                base(port)
        {
            Init();
        }
        
        public virtual void Init()
        {

            // // Set client endpoint address
            EndpointAddress = "urn:uuid:01ad4c7e-eaf1-440a-be52-a27e01040a38";
        }
        
        public virtual AlertResponse Alert(Alert req)
        {

            // Create request header
            String action;
            action = "http://localhost/WineMonitorAlert/IWineMonitorAlert/Alert";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, ServiceEndpoint, null, EndpointAddress, null);

            // Create request serializer
            AlertDataContractSerializer reqDcs;
            reqDcs = new AlertDataContractSerializer("Alert", "http://localhost/WineMonitorAlert");

            // Build soap request message
            byte[] soapBuffer = SoapMessageBuilder.BuildSoapMessage(header, reqDcs, req);

            // Send service request
            DpwsSoapResponse response;
            response = m_httpClient.SendRequest(soapBuffer, ServiceEndpoint, false, false);

            // Process response
            AlertResponseDataContractSerializer respDcs;
            respDcs = new AlertResponseDataContractSerializer("AlertResponse", "http://localhost/WineMonitorAlert");
            AlertResponse resp;
            resp = ((AlertResponse)(respDcs.ReadObject(response.Reader)));
            return resp;
        }
    }
}
