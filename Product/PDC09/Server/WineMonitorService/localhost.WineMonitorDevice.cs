//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/WineMonitorDevice/", ConfigurationName="IWineMonitorRequest")]
public interface IWineMonitorRequest
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorDevice/RequestUpdate", ReplyAction="http://localhost/WineMonitorDevice/IWineMonitorRequest/RequestUpdateResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    void RequestUpdate();
    
    // CODEGEN: Parameter 'thresholds' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorDevice/SetThresholds", ReplyAction="http://localhost/WineMonitorDevice/IWineMonitorRequest/SetThresholdsResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    SetThresholdsResponse SetThresholds(SetThresholdsRequest request);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorDevice")]
public partial class WineSensorThresholdReq
{
    
    private double maxHumidityField;
    
    private bool maxHumidityFieldSpecified;
    
    private int maxMinutesWithoutUpdateField;
    
    private bool maxMinutesWithoutUpdateFieldSpecified;
    
    private double maxTemperatureField;
    
    private bool maxTemperatureFieldSpecified;
    
    private double minHumidityField;
    
    private bool minHumidityFieldSpecified;
    
    private double minTemperatureField;
    
    private bool minTemperatureFieldSpecified;
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public double MaxHumidity
    {
        get
        {
            return this.maxHumidityField;
        }
        set
        {
            this.maxHumidityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxHumiditySpecified
    {
        get
        {
            return this.maxHumidityFieldSpecified;
        }
        set
        {
            this.maxHumidityFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public int MaxMinutesWithoutUpdate
    {
        get
        {
            return this.maxMinutesWithoutUpdateField;
        }
        set
        {
            this.maxMinutesWithoutUpdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxMinutesWithoutUpdateSpecified
    {
        get
        {
            return this.maxMinutesWithoutUpdateFieldSpecified;
        }
        set
        {
            this.maxMinutesWithoutUpdateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public double MaxTemperature
    {
        get
        {
            return this.maxTemperatureField;
        }
        set
        {
            this.maxTemperatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxTemperatureSpecified
    {
        get
        {
            return this.maxTemperatureFieldSpecified;
        }
        set
        {
            this.maxTemperatureFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public double MinHumidity
    {
        get
        {
            return this.minHumidityField;
        }
        set
        {
            this.minHumidityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MinHumiditySpecified
    {
        get
        {
            return this.minHumidityFieldSpecified;
        }
        set
        {
            this.minHumidityFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public double MinTemperature
    {
        get
        {
            return this.minTemperatureField;
        }
        set
        {
            this.minTemperatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MinTemperatureSpecified
    {
        get
        {
            return this.minTemperatureFieldSpecified;
        }
        set
        {
            this.minTemperatureFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public System.DateTime TimeStamp
    {
        get
        {
            return this.timeStampField;
        }
        set
        {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified
    {
        get
        {
            return this.timeStampFieldSpecified;
        }
        set
        {
            this.timeStampFieldSpecified = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="SetThresholds", WrapperNamespace="http://localhost/WineMonitorDevice/", IsWrapped=true)]
public partial class SetThresholdsRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorDevice/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public WineSensorThresholdReq thresholds;
    
    public SetThresholdsRequest()
    {
    }
    
    public SetThresholdsRequest(WineSensorThresholdReq thresholds)
    {
        this.thresholds = thresholds;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="SetThresholdsResponse", WrapperNamespace="http://localhost/WineMonitorDevice/", IsWrapped=true)]
public partial class SetThresholdsResponse
{
    
    public SetThresholdsResponse()
    {
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWineMonitorRequestChannel : IWineMonitorRequest, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WineMonitorRequestClient : System.ServiceModel.ClientBase<IWineMonitorRequest>, IWineMonitorRequest
{
    
    public WineMonitorRequestClient()
    {
    }
    
    public WineMonitorRequestClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WineMonitorRequestClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WineMonitorRequestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WineMonitorRequestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void RequestUpdate()
    {
        base.Channel.RequestUpdate();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    SetThresholdsResponse IWineMonitorRequest.SetThresholds(SetThresholdsRequest request)
    {
        return base.Channel.SetThresholds(request);
    }
    
    public void SetThresholds(WineSensorThresholdReq thresholds)
    {
        SetThresholdsRequest inValue = new SetThresholdsRequest();
        inValue.thresholds = thresholds;
        SetThresholdsResponse retVal = ((IWineMonitorRequest)(this)).SetThresholds(inValue);
    }
}
