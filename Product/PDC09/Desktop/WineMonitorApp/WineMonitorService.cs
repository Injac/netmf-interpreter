//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/WineMonitorService/", ConfigurationName="IWineMonitor")]
public interface IWineMonitor
{
    
    // CODEGEN: Parameter 'GetSensorDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetSensorData", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetSensorDataResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetSensorDataResponse GetSensorData(GetSensorDataRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetSensorData", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetSensorDataResponse")]
    System.IAsyncResult BeginGetSensorData(GetSensorDataRequest request, System.AsyncCallback callback, object asyncState);
    
    GetSensorDataResponse EndGetSensorData(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetAlertResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetAlert", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetAlertResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetAlertResponse GetAlert(GetAlertRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetAlert", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetAlertResponse")]
    System.IAsyncResult BeginGetAlert(GetAlertRequest request, System.AsyncCallback callback, object asyncState);
    
    GetAlertResponse EndGetAlert(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetThresholdValuesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetThresholdValues", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetThresholdValuesResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetThresholdValuesResponse GetThresholdValues(GetThresholdValuesRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetThresholdValues", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetThresholdValuesResponse")]
    System.IAsyncResult BeginGetThresholdValues(GetThresholdValuesRequest request, System.AsyncCallback callback, object asyncState);
    
    GetThresholdValuesResponse EndGetThresholdValues(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetWineSensorDataHistoryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetWineSensorDataHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetWineSensorDataHistoryResponse" +
        "")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetWineSensorDataHistoryResponse GetWineSensorDataHistory(GetWineSensorDataHistoryRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetWineSensorDataHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetWineSensorDataHistoryResponse" +
        "")]
    System.IAsyncResult BeginGetWineSensorDataHistory(GetWineSensorDataHistoryRequest request, System.AsyncCallback callback, object asyncState);
    
    GetWineSensorDataHistoryResponse EndGetWineSensorDataHistory(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetAlertHistoryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetAlertHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetAlertHistoryResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetAlertHistoryResponse GetAlertHistory(GetAlertHistoryRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetAlertHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetAlertHistoryResponse")]
    System.IAsyncResult BeginGetAlertHistory(GetAlertHistoryRequest request, System.AsyncCallback callback, object asyncState);
    
    GetAlertHistoryResponse EndGetAlertHistory(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetThresholdHistoryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetThresholdHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetThresholdHistoryResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetThresholdHistoryResponse GetThresholdHistory(GetThresholdHistoryRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetThresholdHistory", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetThresholdHistoryResponse")]
    System.IAsyncResult BeginGetThresholdHistory(GetThresholdHistoryRequest request, System.AsyncCallback callback, object asyncState);
    
    GetThresholdHistoryResponse EndGetThresholdHistory(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'GetWineCabinetsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/GetWineCabinets", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetWineCabinetsResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetWineCabinetsResponse GetWineCabinets(GetWineCabinetsRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/GetWineCabinets", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/GetWineCabinetsResponse")]
    System.IAsyncResult BeginGetWineCabinets(GetWineCabinetsRequest request, System.AsyncCallback callback, object asyncState);
    
    GetWineCabinetsResponse EndGetWineCabinets(System.IAsyncResult result);
    
    // CODEGEN: Parameter 'cabinetId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://localhost/WineMonitorService/IWineMonitor/ChangeThresholds", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/ChangeThresholdsResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    ChangeThresholdsResponse ChangeThresholds(ChangeThresholdsRequest request);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/WineMonitorService/IWineMonitor/ChangeThresholds", ReplyAction="http://localhost/WineMonitorService/IWineMonitor/ChangeThresholdsResponse")]
    System.IAsyncResult BeginChangeThresholds(ChangeThresholdsRequest request, System.AsyncCallback callback, object asyncState);
    
    ChangeThresholdsResponse EndChangeThresholds(System.IAsyncResult result);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
public partial class WineSensorData
{
    
    private double humidityField;
    
    private bool humidityFieldSpecified;
    
    private double temperatureField;
    
    private bool temperatureFieldSpecified;
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public double Humidity
    {
        get
        {
            return this.humidityField;
        }
        set
        {
            this.humidityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HumiditySpecified
    {
        get
        {
            return this.humidityFieldSpecified;
        }
        set
        {
            this.humidityFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public double Temperature
    {
        get
        {
            return this.temperatureField;
        }
        set
        {
            this.temperatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TemperatureSpecified
    {
        get
        {
            return this.temperatureFieldSpecified;
        }
        set
        {
            this.temperatureFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public System.DateTime TimeStamp
    {
        get
        {
            return this.timeStampField;
        }
        set
        {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified
    {
        get
        {
            return this.timeStampFieldSpecified;
        }
        set
        {
            this.timeStampFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
public partial class CabinetItem
{
    
    private string cabinetField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public string Cabinet
    {
        get
        {
            return this.cabinetField;
        }
        set
        {
            this.cabinetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
public partial class WineSensorThreshold
{
    
    private double maxHumidityField;
    
    private bool maxHumidityFieldSpecified;
    
    private int maxMinutesWithoutUpdateField;
    
    private bool maxMinutesWithoutUpdateFieldSpecified;
    
    private double maxTemperatureField;
    
    private bool maxTemperatureFieldSpecified;
    
    private double minHumidityField;
    
    private bool minHumidityFieldSpecified;
    
    private double minTemperatureField;
    
    private bool minTemperatureFieldSpecified;
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public double MaxHumidity
    {
        get
        {
            return this.maxHumidityField;
        }
        set
        {
            this.maxHumidityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxHumiditySpecified
    {
        get
        {
            return this.maxHumidityFieldSpecified;
        }
        set
        {
            this.maxHumidityFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public int MaxMinutesWithoutUpdate
    {
        get
        {
            return this.maxMinutesWithoutUpdateField;
        }
        set
        {
            this.maxMinutesWithoutUpdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxMinutesWithoutUpdateSpecified
    {
        get
        {
            return this.maxMinutesWithoutUpdateFieldSpecified;
        }
        set
        {
            this.maxMinutesWithoutUpdateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public double MaxTemperature
    {
        get
        {
            return this.maxTemperatureField;
        }
        set
        {
            this.maxTemperatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxTemperatureSpecified
    {
        get
        {
            return this.maxTemperatureFieldSpecified;
        }
        set
        {
            this.maxTemperatureFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public double MinHumidity
    {
        get
        {
            return this.minHumidityField;
        }
        set
        {
            this.minHumidityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MinHumiditySpecified
    {
        get
        {
            return this.minHumidityFieldSpecified;
        }
        set
        {
            this.minHumidityFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public double MinTemperature
    {
        get
        {
            return this.minTemperatureField;
        }
        set
        {
            this.minTemperatureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MinTemperatureSpecified
    {
        get
        {
            return this.minTemperatureFieldSpecified;
        }
        set
        {
            this.minTemperatureFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public System.DateTime TimeStamp
    {
        get
        {
            return this.timeStampField;
        }
        set
        {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified
    {
        get
        {
            return this.timeStampFieldSpecified;
        }
        set
        {
            this.timeStampFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
public partial class AlertData
{
    
    private string alertField;
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string Alert
    {
        get
        {
            return this.alertField;
        }
        set
        {
            this.alertField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public System.DateTime TimeStamp
    {
        get
        {
            return this.timeStampField;
        }
        set
        {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified
    {
        get
        {
            return this.timeStampFieldSpecified;
        }
        set
        {
            this.timeStampFieldSpecified = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorData", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetSensorDataRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    public GetSensorDataRequest()
    {
    }
    
    public GetSensorDataRequest(string cabinetId)
    {
        this.cabinetId = cabinetId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorDataResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetSensorDataResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public WineSensorData GetSensorDataResult;
    
    public GetSensorDataResponse()
    {
    }
    
    public GetSensorDataResponse(WineSensorData GetSensorDataResult)
    {
        this.GetSensorDataResult = GetSensorDataResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAlert", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetAlertRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    public GetAlertRequest()
    {
    }
    
    public GetAlertRequest(string cabinetId)
    {
        this.cabinetId = cabinetId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAlertResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetAlertResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public AlertData GetAlertResult;
    
    public GetAlertResponse()
    {
    }
    
    public GetAlertResponse(AlertData GetAlertResult)
    {
        this.GetAlertResult = GetAlertResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetThresholdValues", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetThresholdValuesRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    public GetThresholdValuesRequest()
    {
    }
    
    public GetThresholdValuesRequest(string cabinetId)
    {
        this.cabinetId = cabinetId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetThresholdValuesResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetThresholdValuesResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public WineSensorThreshold GetThresholdValuesResult;
    
    public GetThresholdValuesResponse()
    {
    }
    
    public GetThresholdValuesResponse(WineSensorThreshold GetThresholdValuesResult)
    {
        this.GetThresholdValuesResult = GetThresholdValuesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetWineSensorDataHistory", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetWineSensorDataHistoryRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=1)]
    public System.DateTime dataSince;
    
    public GetWineSensorDataHistoryRequest()
    {
    }
    
    public GetWineSensorDataHistoryRequest(string cabinetId, System.DateTime dataSince)
    {
        this.cabinetId = cabinetId;
        this.dataSince = dataSince;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetWineSensorDataHistoryResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetWineSensorDataHistoryResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
    public WineSensorData[] GetWineSensorDataHistoryResult;
    
    public GetWineSensorDataHistoryResponse()
    {
    }
    
    public GetWineSensorDataHistoryResponse(WineSensorData[] GetWineSensorDataHistoryResult)
    {
        this.GetWineSensorDataHistoryResult = GetWineSensorDataHistoryResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAlertHistory", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetAlertHistoryRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=1)]
    public System.DateTime alertsSince;
    
    public GetAlertHistoryRequest()
    {
    }
    
    public GetAlertHistoryRequest(string cabinetId, System.DateTime alertsSince)
    {
        this.cabinetId = cabinetId;
        this.alertsSince = alertsSince;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAlertHistoryResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetAlertHistoryResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
    public AlertData[] GetAlertHistoryResult;
    
    public GetAlertHistoryResponse()
    {
    }
    
    public GetAlertHistoryResponse(AlertData[] GetAlertHistoryResult)
    {
        this.GetAlertHistoryResult = GetAlertHistoryResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetThresholdHistory", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetThresholdHistoryRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=1)]
    public System.DateTime changesSince;
    
    public GetThresholdHistoryRequest()
    {
    }
    
    public GetThresholdHistoryRequest(string cabinetId, System.DateTime changesSince)
    {
        this.cabinetId = cabinetId;
        this.changesSince = changesSince;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetThresholdHistoryResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetThresholdHistoryResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
    public WineSensorThreshold[] GetThresholdHistoryResult;
    
    public GetThresholdHistoryResponse()
    {
    }
    
    public GetThresholdHistoryResponse(WineSensorThreshold[] GetThresholdHistoryResult)
    {
        this.GetThresholdHistoryResult = GetThresholdHistoryResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetWineCabinets", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetWineCabinetsRequest
{
    
    public GetWineCabinetsRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetWineCabinetsResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class GetWineCabinetsResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WineMonitorService")]
    public CabinetItem[] GetWineCabinetsResult;
    
    public GetWineCabinetsResponse()
    {
    }
    
    public GetWineCabinetsResponse(CabinetItem[] GetWineCabinetsResult)
    {
        this.GetWineCabinetsResult = GetWineCabinetsResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="ChangeThresholds", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class ChangeThresholdsRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string cabinetId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://localhost/WineMonitorService/", Order=1)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public WineSensorThreshold data;
    
    public ChangeThresholdsRequest()
    {
    }
    
    public ChangeThresholdsRequest(string cabinetId, WineSensorThreshold data)
    {
        this.cabinetId = cabinetId;
        this.data = data;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="ChangeThresholdsResponse", WrapperNamespace="http://localhost/WineMonitorService/", IsWrapped=true)]
public partial class ChangeThresholdsResponse
{
    
    public ChangeThresholdsResponse()
    {
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWineMonitorChannel : IWineMonitor, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WineMonitorClient : System.ServiceModel.ClientBase<IWineMonitor>, IWineMonitor
{
    
    public WineMonitorClient()
    {
    }
    
    public WineMonitorClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WineMonitorClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WineMonitorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WineMonitorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSensorDataResponse IWineMonitor.GetSensorData(GetSensorDataRequest request)
    {
        return base.Channel.GetSensorData(request);
    }
    
    public WineSensorData GetSensorData(string cabinetId)
    {
        GetSensorDataRequest inValue = new GetSensorDataRequest();
        inValue.cabinetId = cabinetId;
        GetSensorDataResponse retVal = ((IWineMonitor)(this)).GetSensorData(inValue);
        return retVal.GetSensorDataResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetSensorData(GetSensorDataRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetSensorData(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetSensorData(string cabinetId, System.AsyncCallback callback, object asyncState)
    {
        GetSensorDataRequest inValue = new GetSensorDataRequest();
        inValue.cabinetId = cabinetId;
        return ((IWineMonitor)(this)).BeginGetSensorData(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSensorDataResponse IWineMonitor.EndGetSensorData(System.IAsyncResult result)
    {
        return base.Channel.EndGetSensorData(result);
    }
    
    public WineSensorData EndGetSensorData(System.IAsyncResult result)
    {
        GetSensorDataResponse retVal = ((IWineMonitor)(this)).EndGetSensorData(result);
        return retVal.GetSensorDataResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAlertResponse IWineMonitor.GetAlert(GetAlertRequest request)
    {
        return base.Channel.GetAlert(request);
    }
    
    public AlertData GetAlert(string cabinetId)
    {
        GetAlertRequest inValue = new GetAlertRequest();
        inValue.cabinetId = cabinetId;
        GetAlertResponse retVal = ((IWineMonitor)(this)).GetAlert(inValue);
        return retVal.GetAlertResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetAlert(GetAlertRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAlert(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetAlert(string cabinetId, System.AsyncCallback callback, object asyncState)
    {
        GetAlertRequest inValue = new GetAlertRequest();
        inValue.cabinetId = cabinetId;
        return ((IWineMonitor)(this)).BeginGetAlert(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAlertResponse IWineMonitor.EndGetAlert(System.IAsyncResult result)
    {
        return base.Channel.EndGetAlert(result);
    }
    
    public AlertData EndGetAlert(System.IAsyncResult result)
    {
        GetAlertResponse retVal = ((IWineMonitor)(this)).EndGetAlert(result);
        return retVal.GetAlertResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetThresholdValuesResponse IWineMonitor.GetThresholdValues(GetThresholdValuesRequest request)
    {
        return base.Channel.GetThresholdValues(request);
    }
    
    public WineSensorThreshold GetThresholdValues(string cabinetId)
    {
        GetThresholdValuesRequest inValue = new GetThresholdValuesRequest();
        inValue.cabinetId = cabinetId;
        GetThresholdValuesResponse retVal = ((IWineMonitor)(this)).GetThresholdValues(inValue);
        return retVal.GetThresholdValuesResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetThresholdValues(GetThresholdValuesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetThresholdValues(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetThresholdValues(string cabinetId, System.AsyncCallback callback, object asyncState)
    {
        GetThresholdValuesRequest inValue = new GetThresholdValuesRequest();
        inValue.cabinetId = cabinetId;
        return ((IWineMonitor)(this)).BeginGetThresholdValues(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetThresholdValuesResponse IWineMonitor.EndGetThresholdValues(System.IAsyncResult result)
    {
        return base.Channel.EndGetThresholdValues(result);
    }
    
    public WineSensorThreshold EndGetThresholdValues(System.IAsyncResult result)
    {
        GetThresholdValuesResponse retVal = ((IWineMonitor)(this)).EndGetThresholdValues(result);
        return retVal.GetThresholdValuesResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetWineSensorDataHistoryResponse IWineMonitor.GetWineSensorDataHistory(GetWineSensorDataHistoryRequest request)
    {
        return base.Channel.GetWineSensorDataHistory(request);
    }
    
    public WineSensorData[] GetWineSensorDataHistory(string cabinetId, System.DateTime dataSince)
    {
        GetWineSensorDataHistoryRequest inValue = new GetWineSensorDataHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.dataSince = dataSince;
        GetWineSensorDataHistoryResponse retVal = ((IWineMonitor)(this)).GetWineSensorDataHistory(inValue);
        return retVal.GetWineSensorDataHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetWineSensorDataHistory(GetWineSensorDataHistoryRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWineSensorDataHistory(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetWineSensorDataHistory(string cabinetId, System.DateTime dataSince, System.AsyncCallback callback, object asyncState)
    {
        GetWineSensorDataHistoryRequest inValue = new GetWineSensorDataHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.dataSince = dataSince;
        return ((IWineMonitor)(this)).BeginGetWineSensorDataHistory(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetWineSensorDataHistoryResponse IWineMonitor.EndGetWineSensorDataHistory(System.IAsyncResult result)
    {
        return base.Channel.EndGetWineSensorDataHistory(result);
    }
    
    public WineSensorData[] EndGetWineSensorDataHistory(System.IAsyncResult result)
    {
        GetWineSensorDataHistoryResponse retVal = ((IWineMonitor)(this)).EndGetWineSensorDataHistory(result);
        return retVal.GetWineSensorDataHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAlertHistoryResponse IWineMonitor.GetAlertHistory(GetAlertHistoryRequest request)
    {
        return base.Channel.GetAlertHistory(request);
    }
    
    public AlertData[] GetAlertHistory(string cabinetId, System.DateTime alertsSince)
    {
        GetAlertHistoryRequest inValue = new GetAlertHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.alertsSince = alertsSince;
        GetAlertHistoryResponse retVal = ((IWineMonitor)(this)).GetAlertHistory(inValue);
        return retVal.GetAlertHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetAlertHistory(GetAlertHistoryRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAlertHistory(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetAlertHistory(string cabinetId, System.DateTime alertsSince, System.AsyncCallback callback, object asyncState)
    {
        GetAlertHistoryRequest inValue = new GetAlertHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.alertsSince = alertsSince;
        return ((IWineMonitor)(this)).BeginGetAlertHistory(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAlertHistoryResponse IWineMonitor.EndGetAlertHistory(System.IAsyncResult result)
    {
        return base.Channel.EndGetAlertHistory(result);
    }
    
    public AlertData[] EndGetAlertHistory(System.IAsyncResult result)
    {
        GetAlertHistoryResponse retVal = ((IWineMonitor)(this)).EndGetAlertHistory(result);
        return retVal.GetAlertHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetThresholdHistoryResponse IWineMonitor.GetThresholdHistory(GetThresholdHistoryRequest request)
    {
        return base.Channel.GetThresholdHistory(request);
    }
    
    public WineSensorThreshold[] GetThresholdHistory(string cabinetId, System.DateTime changesSince)
    {
        GetThresholdHistoryRequest inValue = new GetThresholdHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.changesSince = changesSince;
        GetThresholdHistoryResponse retVal = ((IWineMonitor)(this)).GetThresholdHistory(inValue);
        return retVal.GetThresholdHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetThresholdHistory(GetThresholdHistoryRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetThresholdHistory(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetThresholdHistory(string cabinetId, System.DateTime changesSince, System.AsyncCallback callback, object asyncState)
    {
        GetThresholdHistoryRequest inValue = new GetThresholdHistoryRequest();
        inValue.cabinetId = cabinetId;
        inValue.changesSince = changesSince;
        return ((IWineMonitor)(this)).BeginGetThresholdHistory(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetThresholdHistoryResponse IWineMonitor.EndGetThresholdHistory(System.IAsyncResult result)
    {
        return base.Channel.EndGetThresholdHistory(result);
    }
    
    public WineSensorThreshold[] EndGetThresholdHistory(System.IAsyncResult result)
    {
        GetThresholdHistoryResponse retVal = ((IWineMonitor)(this)).EndGetThresholdHistory(result);
        return retVal.GetThresholdHistoryResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetWineCabinetsResponse IWineMonitor.GetWineCabinets(GetWineCabinetsRequest request)
    {
        return base.Channel.GetWineCabinets(request);
    }
    
    public CabinetItem[] GetWineCabinets()
    {
        GetWineCabinetsRequest inValue = new GetWineCabinetsRequest();
        GetWineCabinetsResponse retVal = ((IWineMonitor)(this)).GetWineCabinets(inValue);
        return retVal.GetWineCabinetsResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginGetWineCabinets(GetWineCabinetsRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWineCabinets(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginGetWineCabinets(System.AsyncCallback callback, object asyncState)
    {
        GetWineCabinetsRequest inValue = new GetWineCabinetsRequest();
        return ((IWineMonitor)(this)).BeginGetWineCabinets(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetWineCabinetsResponse IWineMonitor.EndGetWineCabinets(System.IAsyncResult result)
    {
        return base.Channel.EndGetWineCabinets(result);
    }
    
    public CabinetItem[] EndGetWineCabinets(System.IAsyncResult result)
    {
        GetWineCabinetsResponse retVal = ((IWineMonitor)(this)).EndGetWineCabinets(result);
        return retVal.GetWineCabinetsResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ChangeThresholdsResponse IWineMonitor.ChangeThresholds(ChangeThresholdsRequest request)
    {
        return base.Channel.ChangeThresholds(request);
    }
    
    public void ChangeThresholds(string cabinetId, WineSensorThreshold data)
    {
        ChangeThresholdsRequest inValue = new ChangeThresholdsRequest();
        inValue.cabinetId = cabinetId;
        inValue.data = data;
        ChangeThresholdsResponse retVal = ((IWineMonitor)(this)).ChangeThresholds(inValue);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWineMonitor.BeginChangeThresholds(ChangeThresholdsRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginChangeThresholds(request, callback, asyncState);
    }
    
    public System.IAsyncResult BeginChangeThresholds(string cabinetId, WineSensorThreshold data, System.AsyncCallback callback, object asyncState)
    {
        ChangeThresholdsRequest inValue = new ChangeThresholdsRequest();
        inValue.cabinetId = cabinetId;
        inValue.data = data;
        return ((IWineMonitor)(this)).BeginChangeThresholds(inValue, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ChangeThresholdsResponse IWineMonitor.EndChangeThresholds(System.IAsyncResult result)
    {
        return base.Channel.EndChangeThresholds(result);
    }
    
    public void EndChangeThresholds(System.IAsyncResult result)
    {
        ChangeThresholdsResponse retVal = ((IWineMonitor)(this)).EndChangeThresholds(result);
    }
}
