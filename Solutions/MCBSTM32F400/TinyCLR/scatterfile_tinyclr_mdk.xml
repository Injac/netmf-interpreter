<?xml version="1.0"?>
<ScatterFile xmlns="http://schemas.microsoft.com/netmf/ScatterfileSchema.xsd">

    <!-- STM32F4 with 1M Flash, 128k SRAM, and 64k DATA CCM -->

    <Set Name="Valid" Value="false"/>

    <!-- ################################################################################ -->
        
    <!-- CCM 64K -->
    <Set Name="CCM_Size"                Value="0x00010000" />
    <Set Name="Stack_Bottom"            Value="0x10000000"/>
    <Set Name="Stack_Size"              Value="0x00008000"/>

    <If Name="TARGETLOCATION" In="FLASH">
        <Set Name="Config_BaseAddress"  Value="0x0800C000"/>    
        <Set Name="Config_Size"         Value="0x00004000"/>
        <Set Name="Code_BaseAddress"    Value="0x08010000"/>
        <Set Name="Code_Size"           Value="0x00070000"/>
        <Set Name="Valid"               Value="true"/>
    </If>

    <!-- ################################################################################ -->

    <If Name="Valid" Value="false">
        <Error Message="Configuration not recognized"/>
    </If>

    <LoadRegion Name="LR_%TARGETLOCATION%" Base="%Code_BaseAddress%" Options="ABSOLUTE" Size="%Code_Size%">

        <ExecRegion Name="ER_%TARGETLOCATION%" Base="%Code_BaseAddress%" Options="FIXED" Size="">
            <!-- the entry pointer section goes into this region -->
            <FileMapping Name="AppEntry.obj" Options="(+RO, +FIRST)" />
            <FileMapping Name="*" Options="(SectionForBootstrapOperations)" />
            <FileMapping Name="*" Options="(+RO-CODE)" />
            <FileMapping Name="*" Options="(+RO-DATA)" />

            <!-- Fiq profile -->
            <IfDefined Name="FIQ_SAMPLING_PROFILER">
                <FileMapping Name="FiqSubhandler_STM32.obj"  Options="(+RO)" />
                <FileMapping Name="sampling_profiler_RAM.obj" Options="(+RO)" />
            </IfDefined>
            
            <IfNotDefined Name="Data_BaseAddress">
                <FileMapping Name="tinyclr_dat.obj" Options="(+RO, +LAST)" />
            </IfNotDefined>
        </ExecRegion>
        
         <!-- CCM RAM 64K --> 
        <ExecRegion Name="ER_STACK_BOTTOM" Base="%Stack_Bottom%" Options="ABSOLUTE UNINIT" Size="">
            <FileMapping Name="*" Options="(SectionForStackBottom)" />
        </ExecRegion>
        
        <!-- Stack allocation pools for the OS, Sizes are set in RTX_Conf_CM.c along with other OS configuration -->
        <ExecRegion Name="ER_RT_STACK" Base="AlignExpr( +0, 8)" Options="ABSOLUTE UNINIT" Size="">
            <FileMapping Name="*" Options="(rtx_stack)" />
        </ExecRegion>
        <!-- The rest of the CCM is used as a general stack during startup. This can't overlap with the ER_RT_STACK
                region as the kernel will zero that out during initialization, which would overwrite the stack of the
                code running the initialization, causing an early FAULT. Size and alignment are critical here. The stack
                must be aligned on an 8 byte boundary AND the size of this region must not extend it past the end of the
                actual physical CCM space. The CRT startup code will initialize the region and, if the aligned size
                puts the end outside of physical memory it will generate an imprecise abort.
        -->
        <ExecRegion Name="ER_STACK" Base="+0" Options="ABSOLUTE EMPTY" Size="(AlignExpr(%CCM_Size% - 8 - ImageLength(ER_RT_STACK), 8))" />
        <ExecRegion Name="ER_STACK_TOP" Base="+0" Options="ABSOLUTE UNINIT" Size="">
            <FileMapping Name="*" Options="(SectionForStackTop +LAST)" />
        </ExecRegion>

        <!-- internal SRAM -->
        <!-- Custom heap used to mark location of vector table in RAM -->
        <!-- this is a rather inflexible abuse of Custom Heap sections, as it prevents the use
             of an actual heap for those devices (like MCBSTM32F400 ) that have external RAM available
             Leaving it for now to simplify getting the base port going, but this should be moved
             to a dedicated section for the vector table in RAM in the future. 
             
             NOTE:
             Despite what you might hope for, this CANNOT go into the CCM area as the NVIC does not
             have access to that space (it sees the AHB layer and below, rather than the core's D-Bus)
        -->
        <!-- Alignment for the vector table is important to allow the NVIC to decode the proper locations
            (See Section 4.4.4 of the ARM Cortex-M4 Generic User Guide [ ARM DUI 0553A (ID121610) ] )
            Since this starts the SRAM block, it's aligned just fine for any size table.
        -->
        <ExecRegion Name="ER_CUSTOM_HEAP_BEGIN" Base="0x20000000" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(VectorTable +FIRST)" />
            <FileMapping Name="*" Options="(SectionForCustomHeapBegin)" />
        </ExecRegion>

        <!-- everything between heapbegin and heapend will be allocated for the unmanaged SimpleHeap -->
        <ExecRegion Name="ER_CUSTOM_HEAP_END" Base="+0" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForCustomHeapEnd)" />
        </ExecRegion>

        <ExecRegion Name="ER_ETHERNET" Base="+0" Options="ABSOLUTE" Size="0x1E00">
          <FileMapping Name="STM32F4_ETH_rx_desc.obj" Options="(+ZI)" />
          <FileMapping Name="STM32F4_ETH_tx_desc.obj" Options="(+ZI)" />
        </ExecRegion>
				
        <!-- To enable re-initialization of the LWIP stack, which has no built-in support
             for re-init, all RW and ZI data for the stack is placed into an isolated region
             and the HAL soft reboot code handles re-initializing the data in this region.
        -->
        <ExecRegion Name="ER_LWIP_OS" Base="+0" Options="ABSOLUTE NOCOMPRESS" Size="">
          <FileMapping Name="*sockets_hal_*_LWIP_os.lib" Options="(+RW-DATA +ZI)" />
          <FileMapping Name="*lwip_1_4_1_os_CMSIS_RTOS.lib" Options="(+RW-DATA +ZI)" />
        </ExecRegion>
		
        <ExecRegion Name="ER_RAM_RW" Base="+0" Options="ABSOLUTE" Size="">
            <FileMapping Name="*" Options="(+RW-DATA, +ZI)" />
        </ExecRegion>
        
        <ExecRegion Name="ER_HEAP_BEGIN" Base="+0" Options="ALIGN 16 ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForHeapBegin)" />
        </ExecRegion>

        <!-- everything between heapbegin and heapend will be allocated for a heap -->
        <!-- small (64K) heap for now, until support for enabling the external SRAM is done -->
        <ExecRegion Name="ER_HEAP_END" Base="+0x10000" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForHeapEnd)" />
        </ExecRegion>

        <!-- Profile build -->

        <IfDefined Name="PROFILE_BUILD">
            <ExecRegion Name="ER_PROFILERBUFFER_BEGIN" Base="%ProfileBuffer_Begin%" Options="ABSOLUTE" Size="UNINIT">
                <FileMapping Name="*" Options="(SectionForProfilerBufferBegin)" />
            </ExecRegion>

            <!-- everything between profilebufferbegin and profilebufferend will be allocated for a buffer -->

            <ExecRegion Name="ER_PROFILERBUFFER_END" Base="%ProfileBuffer_End%" Options="ABSOLUTE" Size="UNINIT">
                <FileMapping Name="*" Options="(SectionForProfilerBufferEnd)" />
            </ExecRegion>
        </IfDefined>

    </LoadRegion>

    <!-- If this variable is defined, create a separate section for the tinyclr.dat file -->

    <IfDefined Name="Data_BaseAddress">
        <LoadRegion Name="LR_DAT" Base="%Data_BaseAddress%" Options="ABSOLUTE" Size="%Data_Size%">
            <ExecRegion Name="ER_DAT" Base="%Data_BaseAddress%" Options="FIXED" Size="%Data_Size%">
                <FileMapping Name="tinyclr_dat.obj" Options="(+RO)" />
            </ExecRegion>
        </LoadRegion>
    </IfDefined>

    <IfDefined Name="Config_BaseAddress">
        <LoadRegion Name="LR_CONFIG" Base="%Config_BaseAddress%" Options="ABSOLUTE" Size="%Config_Size%">
            <ExecRegion Name="ER_CONFIG" Base="%Config_BaseAddress%" Options="FIXED" Size="%Config_Size%">
                <FileMapping Name="*" Options="(SectionForConfig)" />
            </ExecRegion>
        </LoadRegion>
    </IfDefined>
</ScatterFile>

