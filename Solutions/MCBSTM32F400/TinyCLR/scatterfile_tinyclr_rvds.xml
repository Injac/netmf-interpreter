<?xml version="1.0"?>
<ScatterFile xmlns="http://schemas.microsoft.com/netmf/ScatterfileSchema.xsd">

    <!-- STM32F4 with 1M Flash, 128k SRAM, and 64k CCM -->

    <Set Name="Valid" Value="false"/>

    <!-- ################################################################################ -->
        
    <!-- CCM 64K -->
    <Set Name="CCM_Size"                Value="0x00010000" />
    <Set Name="Stack_Bottom"            Value="0x10000000"/>
    <Set Name="Stack_Size"              Value="0x00004000"/>
    

    <If Name="TARGETLOCATION" In="FLASH">
        <Set Name="Config_BaseAddress"  Value="0x0800C000"/>    
        <Set Name="Config_Size"         Value="0x00004000"/>
        <Set Name="Code_BaseAddress"    Value="0x08010000"/>
        <Set Name="Code_Size"           Value="0x00070000"/>
        <Set Name="Valid"               Value="true"/>
    </If>

    <If Name="TARGETLOCATION" In="RAM">
        <Set Name="Code_BaseAddress"    Value="0x68000000"/>
        <Set Name="Code_Size"           Value="0x00070000"/>
        <Set Name="Valid"               Value="true"/>
    </If>

  
    <!-- ################################################################################ -->

    <If Name="Valid" Value="false">
        <Error Message="Configuration not recognized"/>
    </If>

    <LoadRegion Name="LR_%TARGETLOCATION%" Base="%Code_BaseAddress%" Options="ABSOLUTE" Size="%Code_Size%">

        <ExecRegion Name="ER_%TARGETLOCATION%" Base="%Code_BaseAddress%" Options="FIXED" Size="">
            <!-- the entry pointer section goes into this region -->
            <FileMapping Name="FirstEntry.obj"    Options="(+RO, +FIRST)" />
            <FileMapping Name="*" Options="(SectionForBootstrapOperations)" />
            <FileMapping Name="*" Options="(+RO-CODE)" />
            <FileMapping Name="*" Options="(+RO-DATA)" />

            <!-- Fiq profile -->
            <IfDefined Name="FIQ_SAMPLING_PROFILER">
                <FileMapping Name="FiqSubhandler_STM32.obj"  Options="(+RO)" />
                <FileMapping Name="sampling_profiler_RAM.obj" Options="(+RO)" />
            </IfDefined>
            
            <IfNotDefined Name="Data_BaseAddress">
                <FileMapping Name="tinyclr_dat.obj" Options="(+RO, +LAST)" />
            </IfNotDefined>
        </ExecRegion>
        
         <!-- CCM RAM 64K --> 
        <ExecRegion Name="ER_STACK_BOTTOM" Base="%Stack_Bottom%" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForStackBottom)" />
        </ExecRegion>
        
        <ExecRegion Name="ER_STACK_TOP" Base="+%Stack_Size%" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForStackTop)" />
        </ExecRegion>

        <!-- NOTE remainder of CCM memory, currently unused. It is only accessible by the core
             (no peripherals, nor DMA) and only available for data (Only connected to the D-Bus)
             Furthermore, the design of the STM32xxx silicon memory map is such that the CCM is
             not contiguous with the internal SRAM, making it difficult to fit code/data into
             the map.
        -->
        
        <!-- internal SRAM -->
        <!-- Custom heap used to mark location of vector table in RAM -->
        <!-- this is a rather inflexible abuse of Custom Heap sections, as it prevents the use
             of an actual heap for those devices (like MCBSTM32F400 ) that have external RAM available
             Leaving it for now to simplify getting the base port going, but this should be moved
             to a dedicated section for the vector table in RAM in the future. 
             
             NOTE:
             Despite what you might hope for, this CANNOT go into the CCM area as the NVIC does not
             have access to that space (it sees the AHB layer and below, rather than the core's D-Bus)
        -->
        <!-- Alignment for the vector table is important to allow the NVIC to decode the proper locations
            (See Section 4.4.4 of the ARM Cortex-M4 Generic User Guide [ ARM DUI 0553A (ID121610) ] )
            Since this starts the SRAM block, it's aligned for any size table.
        -->
        <ExecRegion Name="ER_CUSTOM_HEAP_BEGIN" Base="0x20000000" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForCustomHeapBegin)" />
        </ExecRegion>

        <!-- everything between heapbegin and heapend will be allocated for the unmanaged SimpleHeap -->
        <ExecRegion Name="ER_CUSTOM_HEAP_END" Base="+(84 *4 )" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForCustomHeapEnd)" />
        </ExecRegion>

        <ExecRegion Name="ER_RAM_RO" Base="+0" Options="ABSOLUTE" Size="">
            <!-- Flash programming from Flash is safe on STM32 -->
            <!-- No need to place Flash programming code in RAM -->
            <!-- <FileMapping Name="*" Options="(SectionForFlashOperations)" /> -->
        </ExecRegion>
        
        <ExecRegion Name="ER_ETHERNET" Base="+0" Options="ABSOLUTE" Size="0x1E00">
          <FileMapping Name="STM32F4_ETH_rx_desc.obj" Options="(+ZI)" />
          <FileMapping Name="STM32F4_ETH_tx_desc.obj" Options="(+ZI)" />
        </ExecRegion>
        
        <ExecRegion Name="ER_RAM_RW" Base="+0" Options="ABSOLUTE" Size="">
            <FileMapping Name="*" Options="(+RW-DATA, +ZI)" />
        </ExecRegion>
        
        <ExecRegion Name="ER_HEAP_BEGIN" Base="+0" Options="ALIGN 16 ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForHeapBegin)" />
        </ExecRegion>

        <!-- everything between heapbegin and heapend will be allocated for a heap -->
        <!-- small (64K) heap for now, until support for enabling the external SRAM is done -->
        <ExecRegion Name="ER_HEAP_END" Base="+0x10000" Options="ABSOLUTE" Size="UNINIT">
            <FileMapping Name="*" Options="(SectionForHeapEnd)" />
        </ExecRegion>

        <!-- Profile build -->

        <IfDefined Name="PROFILE_BUILD">
            <ExecRegion Name="ER_PROFILERBUFFER_BEGIN" Base="%ProfileBuffer_Begin%" Options="ABSOLUTE" Size="UNINIT">
                <FileMapping Name="*" Options="(SectionForProfilerBufferBegin)" />
            </ExecRegion>

            <!-- everything between profilebufferbegin and profilebufferend will be allocated for a buffer -->

            <ExecRegion Name="ER_PROFILERBUFFER_END" Base="%ProfileBuffer_End%" Options="ABSOLUTE" Size="UNINIT">
                <FileMapping Name="*" Options="(SectionForProfilerBufferEnd)" />
            </ExecRegion>
        </IfDefined>

    </LoadRegion>

    <!-- If this variable is defined, create a separate section for the tinyclr.dat file -->

    <IfDefined Name="Data_BaseAddress">

        <LoadRegion Name="LR_DAT" Base="%Data_BaseAddress%" Options="ABSOLUTE" Size="%Data_Size%">

            <ExecRegion Name="ER_DAT" Base="%Data_BaseAddress%" Options="FIXED" Size="%Data_Size%">

                <FileMapping Name="tinyclr_dat.obj" Options="(+RO)" />

            </ExecRegion>

        </LoadRegion>

    </IfDefined>

    <IfDefined Name="Config_BaseAddress">

        <LoadRegion Name="LR_CONFIG" Base="%Config_BaseAddress%" Options="ABSOLUTE" Size="%Config_Size%">

            <ExecRegion Name="ER_CONFIG" Base="%Config_BaseAddress%" Options="FIXED" Size="%Config_Size%">

                <FileMapping Name="*" Options="(SectionForConfig)" />

            </ExecRegion>

        </LoadRegion>

    </IfDefined>

</ScatterFile>

